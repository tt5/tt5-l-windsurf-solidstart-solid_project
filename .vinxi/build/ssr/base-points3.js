import{a as n}from"./assets/db-PRkUVS-C.js";import{w as m}from"./assets/auth-BVUYsDc6.js";import{g as p,c as d,a as i}from"./assets/api-D3monypt.js";import{basePointEventService as u}from"./assets/base-point-events-C2UNy6C4.js";import"sqlite3";import"sqlite";import"fs";import"path";import"./assets/utils-AQpNWTN2.js";import"pako";import"./assets/jwt-CO0ye28h.js";import"jsonwebtoken";import"events";const s=1e3,c=(t,e)=>{if(typeof t!="number"||typeof e!="number"||isNaN(t)||isNaN(e))throw new Error("Coordinates must be valid numbers");if(!Number.isInteger(t)||!Number.isInteger(e))throw new Error("Coordinates must be whole numbers");if(Math.abs(t)>s||Math.abs(e)>s)throw new Error(`Coordinates must be between -${s} and ${s}`)},b=(t,e,r)=>{if(t instanceof Error){if(t.message==="Invalid coordinates provided"||t.message.includes("out of bounds"))return i("Invalid request",400,t.message,{requestId:e});if(t.message==="Unauthorized")return i("Authentication required",401,void 0,{requestId:e})}return t instanceof Error?t.message:String(t),console.error(`[${e}] Error in ${r}:`,t),i("Failed to process request",500,void 0,{requestId:e})},O=m(async({request:t,user:e})=>{const r=p();try{const o=await t.json();c(o.x,o.y);const a=await(await n()).add(e.userId,o.x,o.y);return u.emitCreated(a),d({basePoint:a},{status:201,requestId:r})}catch(o){return b(o,r,"POST /api/base-points")}});export{O as POST};
