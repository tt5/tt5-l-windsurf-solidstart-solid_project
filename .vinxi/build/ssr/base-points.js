import{a as r}from"./assets/db-PRkUVS-C.js";import{w as a}from"./assets/auth-BVUYsDc6.js";import{g as n,c as p,a as o}from"./assets/api-D3monypt.js";import{basePointEventService as c}from"./assets/base-point-events-C2UNy6C4.js";import"sqlite3";import"sqlite";import"fs";import"path";import"./assets/utils-AQpNWTN2.js";import"pako";import"./assets/jwt-CO0ye28h.js";import"jsonwebtoken";import"events";const m=(e,t,s)=>{if(e instanceof Error){if(e.message==="Invalid coordinates provided"||e.message.includes("out of bounds"))return o("Invalid request",400,e.message,{requestId:t});if(e.message==="Unauthorized")return o("Authentication required",401,void 0,{requestId:t})}return e instanceof Error?e.message:String(e),console.error(`[${t}] Error in ${s}:`,e),o("Failed to process request",500,void 0,{requestId:t})},R=a(async({user:e})=>{const t=n();try{const s=await r(),i=e.userId;return await s.deleteAllBasePointsForUser(i),c.emitDeleted({id:-1,userId:i,x:0,y:0,createdAtMs:Date.now()}),p({success:!0,message:"All base points deleted successfully",requestId:t})}catch(s){return m(s,t,"DELETE /api/base-points")}});export{R as DELETE};
