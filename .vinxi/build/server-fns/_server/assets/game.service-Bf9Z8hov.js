import{B as i,g as m}from"./db-97-DOlOW.js";class u{constructor(t){this.db=t}async setGameJoined(t,e){await this.db.run('UPDATE users SET game_joined = ?, updated_at_ms = strftime("%s", "now") * 1000 WHERE id = ?',[e,t])}setGameJoinedStatus=this.setGameJoined;async setHomePosition(t,e,s){await this.db.run('UPDATE users SET home_x = ?, home_y = ?, updated_at_ms = strftime("%s", "now") * 1000 WHERE id = ?',[e,s,t])}async getGameStatus(t){const e=await this.db.get("SELECT game_joined, home_x, home_y FROM users WHERE id = ?",[t]);return e?{gameJoined:e.game_joined,homeX:e.home_x,homeY:e.home_y}:null}getUserGameStatus=this.getGameStatus;async getUserById(t){const e=await this.db.get("SELECT * FROM users WHERE id = ?",[t]);return e?{id:e.id,username:e.username,email:e.email||void 0,createdAt:new Date(e.created_at_ms).toISOString(),updatedAt:new Date(e.updated_at_ms).toISOString(),gameJoined:e.game_joined,homeX:e.home_x,homeY:e.home_y}:null}}const c=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999],n=new Map;function h(){let o=null;for(const t of n.values())t>0&&(o===null||t<o)&&(o=t);return o}const d=Date.now();c.forEach(o=>{n.has(o)||n.set(o,d)});class g{userRepository;basePointRepository;constructor(t){this.userRepository=new u(t),this.basePointRepository=new i(t)}async executeTransaction(t){const e=await m();try{await e.run("BEGIN TRANSACTION");const s=await t();return await e.run("COMMIT"),s}catch(s){throw await e.run("ROLLBACK"),s}}async joinGame(t){try{return await this.executeTransaction(async()=>{const e=await this.userRepository.getGameStatus(t);if(console.log(`[joinGame] currentStatus: ${JSON.stringify(e)}`),!e)return{success:!1,gameJoined:!1,homeX:0,homeY:0,error:"User not found",message:"User account could not be found."};if(e.gameJoined)return{success:!0,gameJoined:!0,homeX:e.homeX,homeY:e.homeY,message:"You have already joined the game."};const s=await this.basePointRepository.getOldest();let a=0,r=0;return s&&(console.log(`[joinGame] oldestBase: ${JSON.stringify(s)}`),s.x<0?a=s.x+3:a=s.x-3,s.y<0?r=s.y+2:r=s.y-2,await this.basePointRepository.delete(s.id),console.log(`[joinGame] Deleted oldest base point ${s.id} at (${s.x}, ${s.y})`)),await this.userRepository.setHomePosition(t,a,r),await this.userRepository.setGameJoined(t,!0),await this.basePointRepository.create({userId:t,x:a,y:r,gameCreatedAtMs:(h()??Date.now())-1}),console.log(`[joinGame] Created new base point for ${t} at (${a}, ${r})`),{success:!0,gameJoined:!0,homeX:a,homeY:r,message:"Successfully joined the game! Your home base has been established."}})}catch(e){return console.error("Error in joinGame:",e),{success:!1,gameJoined:!1,homeX:0,homeY:0,error:"Failed to join game",message:"An unexpected error occurred while joining the game."}}}async leaveGame(t){try{return await this.executeTransaction(async()=>{const e=await this.userRepository.getGameStatus(t);return e?e.gameJoined?(await this.userRepository.setGameJoined(t,!1),{success:!0,message:"You have left the game. Your base remains on the map."}):{success:!0,message:"You have not joined the game yet."}:{success:!1,error:"User not found",message:"User account could not be found."}})}catch(e){return console.error("Error in leaveGame:",e),{success:!1,error:"Failed to leave game",message:"An unexpected error occurred while leaving the game."}}}async getGameStatus(t){try{const e=await this.userRepository.getGameStatus(t);return e?{success:!0,gameJoined:e.gameJoined,homeX:e.homeX,homeY:e.homeY,message:e.gameJoined?`Your home base is at (${e.homeX}, ${e.homeY})`:"You have not joined the game yet."}:{success:!1,gameJoined:!1,homeX:0,homeY:0,error:"User not found",message:"User account could not be found."}}catch(e){return console.error("Error in getGameStatus:",e),{success:!1,gameJoined:!1,homeX:0,homeY:0,error:"Failed to retrieve game status",message:"An error occurred while retrieving your game status."}}}}export{g as G};
