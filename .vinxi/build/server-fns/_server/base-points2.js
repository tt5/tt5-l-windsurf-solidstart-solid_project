import{a as d}from"./assets/db-97-DOlOW.js";import{w as g}from"./assets/auth-BVUYsDc6.js";import{g as l,c as f,a as r}from"./assets/api-D3monypt.js";import"sqlite3";import"sqlite";import"fs";import"path";import"./assets/utils-AQpNWTN2.js";import"pako";import"./assets/jwt-CO0ye28h.js";import"jsonwebtoken";const p=20,h=(t,s,e)=>{if(t instanceof Error){if(t.message==="Invalid coordinates provided"||t.message.includes("out of bounds"))return r("Invalid request",400,t.message,{requestId:s});if(t.message==="Unauthorized")return r("Authentication required",401,void 0,{requestId:s})}return t instanceof Error?t.message:String(t),console.error(`[${s}] Error in ${e}:`,t),r("Failed to process request",500,void 0,{requestId:s})},U=g(async({request:t})=>{const s=l(),e=new URL(t.url),a=parseInt(e.searchParams.get("x")||"0"),i=parseInt(e.searchParams.get("y")||"0");try{let o=await(await d()).getAll();return!isNaN(a)&&!isNaN(i)&&(o=o.filter(c=>{const m=c.x-a,u=c.y-i;return Math.abs(m)<=p&&Math.abs(u)<=p})),f({basePoints:o},{requestId:s})}catch(n){return h(n,s,"GET /api/base-points")}});export{U as GET};
