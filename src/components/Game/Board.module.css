@import '../../styles/variables.css';

/* Layout */
.board {
  max-width: 600px;
  margin: 0 auto;
  padding: var(--spacing-lg);
}

/* Loading States */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 300px;
  gap: var(--spacing-md);
}

.loadingMessage {
  margin-top: var(--spacing-md);
  font-size: 0.9rem;
  color: var(--color-text-light);
}

@keyframes spin { to { transform: rotate(360deg); } }
.loadingSpinner {
  width: 40px;
  height: 40px;
  border: 4px solid var(--color-bg);
  border-top-color: var(--color-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

/* Position Indicator */
.positionIndicator {
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: rgba(255, 255, 255, 0.9);
  color: #333;
  padding: 4px 8px;
  border-radius: 12px;
  font-size: 0.8rem;
  font-family: monospace;
  z-index: 5;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
}

/* Boundary Message */
.boundaryMessage {
  position: absolute;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
  background-color: var(--color-error);
  color: white;
  padding: 8px 16px;
  border-radius: var(--border-radius-md);
  font-size: 0.9rem;
  z-index: 10;
  animation: fadeInOut 2s ease-in-out forwards;
  opacity: 0;
}

@keyframes fadeInOut {
  0% { opacity: 0; transform: translate(-50%, -10px); }
  10% { opacity: 1; transform: translate(-50%, 0); }
  90% { opacity: 1; transform: translate(-50%, 0); }
  100% { opacity: 0; transform: translate(-50%, -10px); }
}

/* Game Elements */
.grid {
  --grid-cell-size: 45px;
  display: grid;
  grid-template-columns: repeat(var(--grid-size), var(--grid-cell-size));
  grid-template-rows: repeat(var(--grid-size), var(--grid-cell-size));
  gap: var(--spacing-xs);
  width: fit-content;
  margin: var(--spacing-lg) auto;
  padding: var(--spacing-md);
  background: #2e7d32; /* Lighter green background */
  border-radius: var(--border-radius-md);
  box-shadow: 0 2px 15px rgba(0, 0, 0, 0.2);
}

.square {
  aspect-ratio: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  background: #f8f9fa;
  border: 1px solid #e0e0e0;
  border-radius: var(--border-radius-sm);
  cursor: pointer;
  transition: all var(--transition-normal);
  will-change: transform, box-shadow;
  box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);
  color: #333; /* Ensure text is dark on light squares */
}

/* Empty squares with pattern - larger size */
.square:not(.basePoint):not(.selected):not(.restricted) {
  background-image: 
    linear-gradient(45deg, #f5f5f5 25%, transparent 25%),
    linear-gradient(-45deg, #f5f5f5 25%, transparent 25%),
    linear-gradient(45deg, transparent 75%, #f5f5f5 75%),
    linear-gradient(-45deg, transparent 75%, #f5f5f5 75%);
  background-size: 8px 8px;
  background-position: 0 0, 0 4px, 4px -4px, -4px 0px;
  transform: scale(1.1);
  z-index: 1;
  position: relative;
}

/* Hover States */
.square:hover { background-color: color-mix(in srgb, var(--color-bg) 50%, white); }
.square:active { transform: scale(0.98); }

/* Valid Placement Hover */
.square.valid-hover {
  background-color: #e8f5e9;
  border-color: #4caf50;
  box-shadow: 0 0 0 2px #4caf50;
  transform: translateY(-2px);
  transition: transform 0.1s ease, box-shadow 0.1s ease;
}

/* Invalid Placement Hover */
.square.invalid-hover {
  background-color: #ffebee;
  border-color: #f44336;
  cursor: not-allowed;
  opacity: 0.7;
}

/* Loading State */
.square.loading {
  position: relative;
  cursor: wait;
  opacity: 0.7;
  pointer-events: none;
}

.square.loading::after {
  content: '';
  position: absolute;
  width: 16px;
  height: 16px;
  border: 2px solid var(--color-primary);
  border-top-color: transparent;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}
.square.selected { 
  background-color: #e3f2fd;
  border: 1px solid #1265a8;
}

/* Base Points */
.square.basePoint { 
  background-color: #e8f5e9;
  background-image: none;
}
.square.basePoint:hover { 
  background-color: #d8edd9;
}
.square.selected.basePoint {
  background-color: #d0ebe7;
  border: 2px solid #00897b;
  box-shadow: 0 0 0 1px rgba(0, 137, 123, 0.3);
}

/* Base points on restricted squares */
.square.restricted.basePoint {
  background-color: #fff3e0;
  background-image: none;
  border: 1px solid #ffa000;
}

.square.restricted.basePoint .basePointMarker {
  background: #ffa000;
}

.basePointMarker {
  width: 70%;
  height: 70%;
  background: var(--color-success);
  border-radius: 50%;
  opacity: 0.8;
  transition: all 0.2s ease;
}

.emptyMarker {
  color: rgba(0, 0, 0, 0.3);
  font-size: 1.8rem;
  line-height: 1;
  user-select: none;
  pointer-events: none;
  opacity: 0.6;
  transition: all 0.2s ease;
  margin-top: -2px;
}

.square:hover .emptyMarker {
  opacity: 0.8;
  color: rgba(0, 0, 0, 0.4);
}

/* Error Message */
.errorMessage {
  margin-top: var(--spacing-md);
  padding: var(--spacing-sm) var(--spacing-md);
  background-color: #ffebee;
  border-left: 4px solid #f44336;
  color: #b71c1c;
  border-radius: var(--border-radius-sm);
  font-size: 0.9rem;
  max-width: 100%;
  text-align: center;
  transition: all var(--transition-normal);
}

/* Player Position */
.playerPosition {
  position: relative;
  background: var(--color-primary) !important;
  box-shadow: 0 0 0 2px white, 0 0 0 4px var(--color-primary);
}

.playerPosition::after {
  content: 'P';
  position: absolute;
  inset: 0;
  display: grid;
  place-content: center;
  color: white;
  font-weight: bold;
  font-size: 1.2em;
}

/* Controls */
.userBar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-lg);
  padding: var(--spacing-md);
  background: var(--color-bg);
  border-radius: var(--border-radius-sm);
}

.userBarActions {
  display: flex;
  gap: var(--spacing-md);
  margin-top: var(--spacing-md);
}

.button {
  padding: var(--spacing-xs) var(--spacing-md);
  border: none;
  border-radius: var(--border-radius-sm);
  cursor: pointer;
  transition: background-color var(--transition-normal);
}

.logoutButton {
  composes: button;
  background: var(--color-error);
  color: white;
}

.logoutButton:hover { background: var(--color-error-dark); }

.directionGroup {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: var(--spacing-xs);
  margin-top: var(--spacing-md);
}

.directionButton {
  composes: button;
  min-width: 80px;
  background: var(--color-primary);
  color: white;
  font-weight: bold;
  transition: all var(--transition-normal);
}

.directionButton:hover { background: var(--color-primary-dark); }
.directionButton:active { transform: scale(0.95); }
.directionButton:focus-visible {
  outline: 3px solid #64B5F6;
  outline-offset: 2px;
}

.directionButton:first-child,
.directionButton:last-child {
  grid-column: 1 / -1;
}
