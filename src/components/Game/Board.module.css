@import '../../styles/variables.css';

/* Layout */
.board {
  max-width: 600px;
  margin: 0 auto;
  padding: var(--spacing-lg);
}

/* Loading States */
.loadingContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 300px;
  gap: var(--spacing-md);
}

.loadingMessage {
  margin-top: var(--spacing-md);
  font-size: 0.9rem;
  color: var(--color-text-light);
}

@keyframes spin { to { transform: rotate(360deg); } }
.loadingSpinner {
  width: 40px;
  height: 40px;
  border: 4px solid var(--color-bg);
  border-top-color: var(--color-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

/* Game Elements */
.grid {
  --grid-cell-size: 45px;
  display: grid;
  grid-template-columns: repeat(var(--grid-size), var(--grid-cell-size));
  grid-template-rows: repeat(var(--grid-size), var(--grid-cell-size));
  gap: var(--spacing-xs);
  width: fit-content;
  margin: var(--spacing-lg) auto;
  padding: var(--spacing-md);
  background: var(--color-bg);
  border-radius: var(--border-radius-md);
}

.square {
  aspect-ratio: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--color-bg-light);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-sm);
  cursor: pointer;
  transition: all var(--transition-normal);
  will-change: transform, box-shadow;
}

/* Hover States */
.square:hover { background-color: color-mix(in srgb, var(--color-bg) 50%, white); }
.square:active { transform: scale(0.98); }

/* Valid Placement Hover */
.square.valid-hover {
  background-color: #e8f5e9;
  border-color: #4caf50;
  box-shadow: 0 0 0 2px #4caf50;
  transform: translateY(-2px);
  transition: transform 0.1s ease, box-shadow 0.1s ease;
}

/* Invalid Placement Hover */
.square.invalid-hover {
  background-color: #ffebee;
  border-color: #f44336;
  cursor: not-allowed;
  opacity: 0.7;
}

/* Loading State */
.square.loading {
  position: relative;
  cursor: wait;
  opacity: 0.7;
  pointer-events: none;
}

.square.loading::after {
  content: '';
  position: absolute;
  width: 16px;
  height: 16px;
  border: 2px solid var(--color-primary);
  border-top-color: transparent;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}
.square.selected { 
  background-color: #e3f2fd;
  border-color: #1265a8;
}

/* Base Points */
.square.basePoint { background-color: #e8f5e9; }
.square.basePoint:hover { background-color: #c8e6c9; }
.square.selected.basePoint {
  background-color: #b2dfdb;
  border-color: #00897b;
  box-shadow: 0 0 0 2px #00897b;
}

.basePointMarker {
  width: 70%;
  height: 70%;
  background: var(--color-success);
  border-radius: 50%;
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
}

/* Error Message */
.errorMessage {
  margin-top: var(--spacing-md);
  padding: var(--spacing-sm) var(--spacing-md);
  background-color: #ffebee;
  border-left: 4px solid #f44336;
  color: #b71c1c;
  border-radius: var(--border-radius-sm);
  font-size: 0.9rem;
  max-width: 100%;
  text-align: center;
  transition: all var(--transition-normal);
}

/* Player Position */
.playerPosition {
  position: relative;
  background: var(--color-primary) !important;
  box-shadow: 0 0 0 2px white, 0 0 0 4px var(--color-primary);
}

.playerPosition::after {
  content: 'P';
  position: absolute;
  inset: 0;
  display: grid;
  place-content: center;
  color: white;
  font-weight: bold;
  font-size: 1.2em;
}

/* Controls */
.userBar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-lg);
  padding: var(--spacing-md);
  background: var(--color-bg);
  border-radius: var(--border-radius-sm);
}

.userBarActions {
  display: flex;
  gap: var(--spacing-md);
  margin-top: var(--spacing-md);
}

.button {
  padding: var(--spacing-xs) var(--spacing-md);
  border: none;
  border-radius: var(--border-radius-sm);
  cursor: pointer;
  transition: background-color var(--transition-normal);
}

.logoutButton {
  composes: button;
  background: var(--color-error);
  color: white;
}

.logoutButton:hover { background: var(--color-error-dark); }

.directionGroup {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: var(--spacing-xs);
  margin-top: var(--spacing-md);
}

.directionButton {
  composes: button;
  min-width: 80px;
  background: var(--color-primary);
  color: white;
  font-weight: bold;
  transition: all var(--transition-normal);
}

.directionButton:hover { background: var(--color-primary-dark); }
.directionButton:active { transform: scale(0.95); }
.directionButton:focus-visible {
  outline: 3px solid #64B5F6;
  outline-offset: 2px;
}

.directionButton:first-child,
.directionButton:last-child {
  grid-column: 1 / -1;
}
