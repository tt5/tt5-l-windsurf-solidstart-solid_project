.mapContainer {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 600px;
  overflow: hidden;
  touch-action: none;
  user-select: none;
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
}

.mapViewport {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 600px;
  overflow: hidden;
  touch-action: none;
}

.mapContent {
  background-color: var(--tile-bg-color, rgba(230, 230, 250, 0.5));
  position: absolute;
  width: 100%;
  height: 100%;
  min-height: 600px;
  will-change: transform;
  transform-origin: 0 0;
  pointer-events: none;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  left: 50%;
  top: 50%;
  contain: layout style paint;
  overflow: visible;
  transform-style: preserve-3d;
  perspective: 1000px;
  transform: 
    translate(-50%, -50%) 
    scale(var(--scale, 1)) 
    translate(var(--translate-x, 0), var(--translate-y, 0));
}

.mapViewport {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 600px;
  overflow: hidden;
  touch-action: none;
}

.mapViewportDragging {
  cursor: grabbing;
  user-select: none;
}

/* Tile container */
.tileContainer {
  height: 100%;
  pointer-events: none;
  transform: 
    translateX(var(--translate-x, 0))
    translateY(var(--translate-y, 0))
    scale(var(--scale, 1));
  transform-origin: 0 0;
  will-change: transform;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  overflow: visible;
}

/* Tile styles */
.tile {
  --tile-pos-x: 0;
  --tile-pos-y: 0;
  --tile-size: 64px;
  --translate-x: 0;
  --translate-y: 0;
  --scale: 1;
  --tile-bg-color: transparent;
}

.fallbackTile {
  width: 100%;
  height: 100%;
  background-color: var(--tile-bg-color, rgba(230, 230, 250, 0.5));
  display: flex;
  align-items: center;
  justify-content: center;
  color: #333;
  font-size: 10px;
  font-family: monospace;
  font-weight: bold;
  text-align: center;
  word-break: break-all;
  padding: 4px;
  box-sizing: border-box;
  border: 1px dashed rgba(0, 0, 0, 0.2);
  position: relative;
}

/* Coordinate indicator in corner */
.fallbackTile::after {
  content: attr(style);
  position: absolute;
  bottom: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.5);
  color: white;
  padding: 2px 4px;
  font-size: 8px;
  line-height: 1;
  border-top-left-radius: 3px;
  pointer-events: none;
}

/* Grid styles */
.gridLabel {
  font-family: Arial, sans-serif;
  font-size: 9px;
  fill: #666666;
  font-weight: normal;
  paint-order: stroke;
  stroke: #ffffff;
  stroke-width: 2px;
  stroke-linecap: butt;
  stroke-linejoin: miter;
  stroke-opacity: 0.7;
  vector-effect: non-scaling-stroke;
  text-anchor: start;
}

.gridLabel.major {
  font-size: 11px;
  font-weight: bold;
  fill: #000000;
}

.gridLabel.zero {
  fill: #ff0000;
}

/* Tile container */
/* Tile container */
.tile {
  position: absolute;
  margin: 0;
  padding: 0;
  overflow: hidden;
  will-change: transform;
  pointer-events: none;
  width: var(--tile-base-size, 64px);
  height: var(--tile-base-size, 64px);
  transform-origin: 0 0;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  contain: strict;
  box-sizing: border-box;
  /* Ensure pixel-perfect rendering */
  -webkit-font-smoothing: none;
  -moz-osx-font-smoothing: grayscale;
  image-rendering: -moz-crisp-edges;
  image-rendering: -o-crisp-edges;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: pixelated;
  -ms-interpolation-mode: nearest-neighbor;
  left: 0;
  top: 0;
  transform: 
    translateX(var(--tile-pos-x, 0)) 
    translateY(var(--tile-pos-y, 0)) 
    scale(var(--tile-scale, 1));
}

/* Tile content container */
.tileContent {
  width: 100%;
  height: 100%;
  position: relative;
}

.tileLabel {
  display: visible;
  z-index: 3;
}

.tileContainer {
  --tile-pos-x: 0;
  --tile-pos-y: 0;
  --tile-size: 64px;
  --tile-base-size: 64px;
  --tile-scale: 1;
  --tile-offset-x: 0px;
  --tile-offset-y: 0px;
  --tile-z-index: 1;
  --tile-opacity: 1;
  
  position: absolute;
  left: 0;
  top: 0;
  width: var(--tile-base-size);
  height: var(--tile-base-size);
  transform: 
    translateX(var(--tile-pos-x)) 
    translateY(var(--tile-pos-y)) 
    scale(var(--tile-scale));
  transform-origin: 0 0;
  will-change: transform;
  margin: 0;
  padding: 0;
  overflow: hidden;
  pointer-events: none;
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  contain: strict;
  outline: none;
  box-sizing: border-box;
  -webkit-font-smoothing: none;
  -moz-osx-font-smoothing: grayscale;
  image-rendering: -moz-crisp-edges;
  image-rendering: -o-crisp-edges;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: pixelated;
  -ms-interpolation-mode: nearest-neighbor;
}

/* Tile image with enhanced visibility */
.tileImage {
  width: 100%;
  height: 100%;
  display: block;
  image-rendering: pixelated;
  pointer-events: none;
  object-fit: contain;
  /* Enhanced visibility */
  filter: contrast(1.2) brightness(1.1) saturate(1.2);
  border: 1px solid rgba(0, 0, 0, 0.2);
  box-sizing: border-box;
  /* Subtle grid pattern for transparent areas */
  background-color: rgba(240, 240, 240, 0.5);
  background-image: 
    linear-gradient(45deg, #e0e0e0 25%, transparent 25%),
    linear-gradient(-45deg, #e0e0e0 25%, transparent 25%),
    linear-gradient(45deg, transparent 75%, #e0e0e0 75%),
    linear-gradient(-45deg, transparent 75%, #e0e0e0 75%);
  background-size: 16px 16px;
  background-position: 0 0, 0 8px, 8px -8px, -8px 0px;
  /* Smooth transitions for hover effects */
  transition: filter 0.2s ease, transform 0.2s ease;
}

/* Hover effect for better inspection */
.tile:hover .tileImage {
  filter: contrast(1.3) brightness(1.2) saturate(1.3);
  transform: scale(1.02);
  z-index: 10;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
}

/* Visual indicator for tile boundaries */
.tile::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: 1px solid rgba(0, 0, 0, 0.1);
  pointer-events: none;
  z-index: 1;
}

/* Fallback tile styles */
.fallbackTile {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 10px;
  color: #333;
  border: 1px solid #ccc;
  background-color: var(--tile-bg-color, #f5f5f5);
}

.fallbackTileContent {
  text-align: center;
  padding: 4px;
  line-height: 1.2;
}

/* Error state */
.error {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  background-color: #ffebee;
  color: #c62828;
  font-size: 10px;
}

/* Loading state */
.loading {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.05);
  color: #666;
  font-size: 10px;
}

.fallbackTile {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 10px;
  color: #333;
  border: 1px solid #ccc;
}

.fallbackTileContent {
  text-align: center;
  padding: 4px;
  line-height: 1.2;
}

.tile:hover {
  z-index: 10;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
  transform: scale(calc(var(--tile-scale, 1) * 1.02));
}

/* Grid overlay styles */
.gridOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 10; /* Increased z-index to ensure it's above other elements */
  transform: translateZ(0); /* Force hardware acceleration */
  will-change: transform; /* Optimize for animations */
}


/* Add a subtle background to make grid lines more visible */
.mapContent {
  background-color: rgba(245, 245, 245, 0.1);
}

.tile.loading {
  background-color: #f8f8f8;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #999;
  font-size: 10px;
}

.tile.error {
  background-color: #ffebee;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #d32f2f;
  font-size: 10px;
}

.tileImage {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: -moz-crisp-edges;
  image-rendering: pixelated;
  transform-origin: 0 0;
}

.tileImageScaled {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: 100% 100%;
  background-repeat: no-repeat;
  background-position: center;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: -moz-crisp-edges;
  image-rendering: pixelated;
  transform-origin: 0 0;
  transform: scale(calc(1 / var(--pixel-ratio, 1)));
  width: var(--tile-size, 64px);
  height: var(--tile-size, 64px);
  will-change: transform;
}

.tileImageScaledDynamic {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: -moz-crisp-edges;
  image-rendering: pixelated;
  transform-origin: 0 0;
  transform: scale(calc(1 / var(--pixel-ratio, 1)));
  width: var(--tile-size, 128px);
  height: var(--tile-size, 128px);
}

.mapContainer {
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
}

.mapViewport {
  width: 100%;
  height: 100%;
  cursor: grab;
}

.mapViewportDragging {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 600px;
  overflow: hidden;
  touch-action: none;
  cursor: grabbing;
}

.mapContent {
  transform-origin: 10 10;
  width: 200vw;
  height: 200vh;
  transform: translate3d(
    var(--translate-x, 0),
    var(--translate-y, 0),
    0
  ) scale(var(--scale, 1));
  will-change: transform;
}

.tileContainer {
  position: absolute;
  will-change: transform;
  left: var(--tile-x, 0);
  top: var(--tile-y, 0);
  width: var(--tile-size, 64px);
  height: var(--tile-size, 64px);
}

.tileContent {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.tileImageScaled {
  position: absolute;
  top: 0;
  left: 0;
  width: var(--tile-size, 128px);
  height: var(--tile-size, 128px);
  object-fit: cover;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: -moz-crisp-edges;
  image-rendering: pixelated;
  transform-origin: 0 0;
  transform: scale(var(--scale, 0.5));
}

.tileImageScaledDynamic {
  position: absolute;
  top: 0;
  left: 0;
  width: var(--tile-size, 128px);
  height: var(--tile-size, 128px);
  object-fit: cover;
  image-rendering: -webkit-optimize-contrast;
  image-rendering: -moz-crisp-edges;
  image-rendering: pixelated;
  transform-origin: 0 0;
  transform: scale(calc(1 / var(--pixel-ratio, 1)));
}

.coordinateLabel {
  font-size: 10px;
  color: #666;
  pointer-events: none;
}

.loadingOverlay,
.errorOverlay {
  position: absolute;
  top: 10px;
  left: 50%;
  transform: translateX(-50%);
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 8px 16px;
  border-radius: 4px;
  font-size: 14px;
  z-index: 100;
}

.errorOverlay {
  background-color: #d32f2f;
}

.controls {
  position: absolute;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 10px;
  background-color: rgba(255, 255, 255, 0.9);
  padding: 10px;
  border-radius: 8px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  z-index: 50;
}

.controls button {
  padding: 8px 12px;
  background-color: #1976d2;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  transition: background-color 0.2s;
}

.controls button:hover {
  background-color: #1565c0;
}

.controls button:active {
  background-color: #0d47a1;
}

.coordinates {
  display: flex;
  align-items: center;
  padding: 0 10px;
  font-size: 12px;
  color: #555;
  font-family: monospace;
}
