@import '../../styles/variables.css';

/* Base container */
.mapContainer {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 600px;
  overflow: hidden;
  background-color: var(--color-bg);
  user-select: none;
  touch-action: none;
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
}

/* Viewport */
.mapViewport {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 600px;
  overflow: hidden;
  touch-action: none;
}

.mapViewportDragging {
  cursor: grabbing;
  user-select: none;
}

/* Map content */
.mapContent {
  --translate-x: 0;
  --translate-y: 0;
  --transform-x: 0;
  --transform-y: 0;

  position: absolute;
  top: 50%;
  left: 50%;
  width: 100vw;
  height: 100vh;
  min-height: 2000px;
  overflow: visible;
  background-color: var(--tile-bg-color);
  transform: 
    translate(-50%, -50%)
    translate(calc(var(--transform-x) * 1px), calc(var(--transform-y) * 1px));
  transition: var(--transition-slow);
  pointer-events: none;
  will-change: transform;
  contain: layout style paint;
}

/* Tile container and styles */
.tileContainer, .tile {
  --tile-pos-x: 0;
  --tile-pos-y: 0;
  --tile-size: 64;
  --tile-base-size: 64;

  position: absolute;
  top: calc(var(--tile-pos-y, 0) * 1px);
  left: calc(var(--tile-pos-x, 0) * 1px);
  width: calc(var(--tile-size, 64) * 1px);
  height: calc(var(--tile-size, 64) * 1px);
  overflow: visible;
  transform: translateZ(0);
  backface-visibility: hidden;
  pointer-events: none;
  will-change: transform;
  contain: layout style paint;
}

.tile {
  --tile-pos-x: 0;
  --tile-pos-y: 0;
  --tile-size: 64px;
  --translate-x: 0;
  --translate-y: 0;
  --scale: 1;
  --tile-bg-color: transparent;

  position: absolute;
  top: 0;
  left: 0;
  box-sizing: border-box;
  width: var(--tile-base-size, 64px);
  height: var(--tile-base-size, 64px);
  margin: 0;
  padding: 0;
  overflow: hidden;
  transform: 
    translateX(var(--tile-pos-x, 0)) 
    translateY(var(--tile-pos-y, 0)) 
    scale(var(--tile-scale, 1));
  transform-origin: 0 0;
  backface-visibility: hidden;
  pointer-events: none;
  will-change: transform;
  contain: strict;
  -webkit-font-smoothing: none;
}

/* Loading animation */
@keyframes loading-pulse {
  0% { opacity: 0.5; }

  50% { opacity: 0.8; }

  100% { opacity: 0.5; }
}

/* Fallback tile styles */
.fallbackTile {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  padding: 4px;
  overflow: hidden;
  color: #555;
  font-size: 10px;
  font-family: monospace;
  text-align: center;
  word-break: break-all;
  background-color: var(--tile-bg-color, rgb(240 240 250 / 70%));
  box-sizing: border-box;
  border: 1px dashed rgb(0 0 0 / 20%);
}

.fallbackTile.loading {
  animation: loading-progress 1.5s ease-out forwards;
}

.fallbackTile.loading::after {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;
  height: 2px;
  background: linear-gradient(90deg, transparent, rgb(100 100 255 / 60%), transparent);
  animation: loading-progress 2s linear infinite;
  content: '';
}

@keyframes loading-progress {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

/* Grid styles */
.gridLabel {
  font-weight: normal;
  font-size: 9px;
  font-family: Arial, sans-serif;
  fill: #666;
  stroke: #fff;
  paint-order: stroke;
  stroke-linecap: butt;
  stroke-linejoin: miter;
  stroke-opacity: 0.7;
  stroke-width: 2px;
  text-anchor: start;
  vector-effect: non-scaling-stroke;
}

.gridLabel.major {
  font-weight: bold;
  font-size: 11px;
  fill: #000;
}

.gridLabel.zero {
  fill: #f00;
}

/* Tile content container */

/* Tile label */
.tileLabel {
  position: absolute;
  top: 4px;
  left: 4px;
  z-index: 2;
  padding: 2px 4px;
  color: blue;
  font-size: 10px;
  font-family: monospace;
  background-color: rgb(255 255 255 / 0%);
  border-radius: 3px;
  pointer-events: none;
  display: flex;
  align-items: center;
  gap: 4px;
}

.loadingIndicator {
  width: 10px;
  height: 10px;
  border: 2px solid rgb(0 0 0 / 20%);
  border-radius: 50%;
  border-top-color: #000;
  animation: spin 1s linear infinite;
  opacity: 0.8;
  flex-shrink: 0;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* Tile image and SVG styles */
.tileImage,
.tileSvg {
  position: relative;
  z-index: 1;
  display: block;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  object-fit: contain;
  border: 1px solid rgb(0 0 0 / 20%);
  filter: contrast(1.2) brightness(1.1) saturate(1.2);
  pointer-events: none;
  image-rendering: pixelated;
}

/* Specific styles for SVG tiles */
.tileSvg {
  overflow: visible;
  background: transparent;
  background-color: rgb(240 240 240 / 50%);
  background-image: 
    linear-gradient(45deg, #e0e0e0 25%, transparent 25%),
    linear-gradient(-45deg, #e0e0e0 25%, transparent 25%),
    linear-gradient(45deg, transparent 75%, #e0e0e0 75%),
    linear-gradient(-45deg, transparent 75%, #e0e0e0 75%);
  background-position: 0 0, 0 8px, 8px -8px, -8px 0;
  background-size: 16px 16px;

  /* Smooth transitions for hover effects */
  transition: filter 0.2s ease, transform 0.2s ease;
}

/* Hover effect for better inspection */
.tile:hover .tileImage {
  z-index: 10;
  box-shadow: 0 0 10px rgb(0 0 0 / 20%);
  transform: scale(1.02);
  filter: contrast(1.3) brightness(1.2) saturate(1.3);
}

/* Visual indicator for tile boundaries */
.tile::before {
  position: absolute;
  z-index: 1;
  border: 1px solid rgb(0 0 0 / 10%);
  content: '';
  pointer-events: none;
  inset: 0;
}

/* Fallback tile content */
.fallbackTileContent {
  position: relative;
  z-index: 1;
  padding: 4px;
  line-height: 1.2;
}

/* Error state */
.error {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  color: #c62828;
  font-size: 10px;
  background-color: #ffebee;
}

/* Loading state */
.loading {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  color: #666;
  font-size: 10px;
  background-color: rgb(0 0 0 / 5%);
}

/* Cursor styles */

/* Cursor styles - defined earlier in the file */

/* Grid overlay styles */
.gridOverlay {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 10; /* Increased z-index to ensure it's above other elements */
  width: 100%;
  height: 100%;
  transform: translateZ(0); /* Force hardware acceleration */
  pointer-events: none;
  will-change: transform; /* Optimize for animations */
}

/* Map content styles consolidated */

.tile.loading {
  display: flex;
  align-items: center;
  justify-content: center;
  color: #999;
  font-size: 10px;
  background-color: #f8f8f8;
}

.tile.error {
  display: flex;
  align-items: center;
  justify-content: center;
  color: #d32f2f;
  font-size: 10px;
  background-color: #ffebee;
}

.tileImage {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  transform-origin: 0 0;
  image-rendering: pixelated;
}

/* Tile image variants */
.tileImageScaled {
  position: absolute;
  top: 0;
  left: 0;
  width: var(--tile-size, 128px);
  height: var(--tile-size, 128px);
  object-fit: cover;
  background-repeat: no-repeat;
  background-position: center;
  background-size: 100% 100%;
  transform: scale(var(--scale, 0.5)) scale(calc(1 / var(--pixel-ratio, 1)));
  transform-origin: 0 0;
  will-change: transform;
  image-rendering: pixelated;
}

.tileImageScaledDynamic {
  position: absolute;
  top: 0;
  left: 0;
  width: var(--tile-size, 128px);
  height: var(--tile-size, 128px);
  object-fit: cover;
  transform: scale(calc(1 / var(--pixel-ratio, 1)));
  transform-origin: 0 0;
  image-rendering: pixelated;
}

/* Tile container */
.tileContainer {
  position: absolute;
  top: var(--tile-y, 0);
  left: var(--tile-x, 0);
  width: var(--tile-size, 64px);
  height: var(--tile-size, 64px);
  will-change: transform;
}

.tileContent {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}

.coordinateLabel {
  color: #666;
  font-size: 10px;
  pointer-events: none;
}

.loadingOverlay,
.errorOverlay {
  position: absolute;
  top: 10px;
  left: 50%;
  z-index: 100;
  padding: 8px 16px;
  color: white;
  font-size: 14px;
  background-color: rgb(0 0 0 / 70%);
  border-radius: 4px;
  transform: translateX(-50%);
}

.errorOverlay {
  background-color: #d32f2f;
}

.controls {
  position: absolute;
  bottom: 20px;
  left: 50%;
  z-index: 50;
  display: flex;
  gap: 10px;
  padding: 10px;
  background-color: rgb(255 255 255 / 90%);
  border-radius: 8px;
  box-shadow: 0 2px 10px rgb(0 0 0 / 10%);
  transform: translateX(-50%);
}

.controls button {
  padding: 8px 12px;
  color: white;
  font-size: 14px;
  background-color: #1976d2;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.2s;
}

.controls button:hover {
  background-color: #1565c0;
}

.controls button:active {
  background-color: #0d47a1;
}

.coordinates {
  display: flex;
  align-items: center;
  padding: 0 10px;
  color: #555;
  font-size: 12px;
  font-family: monospace;
}
